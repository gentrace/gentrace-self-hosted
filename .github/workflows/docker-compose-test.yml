name: Docker Compose Test

on:
  push:
    branches:
      - main
    paths:
      - 'docker/**'
      - '.github/workflows/docker-compose-test.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'docker/**'
      - '.github/workflows/docker-compose-test.yml'
  workflow_dispatch:

jobs:
  test:
    name: Test Docker Compose Setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate .env file with secrets
        run: |
          echo "JWT_SECRET=$(openssl rand -hex 32)" > docker/.env
          echo "PRISMA_FIELD_ENCRYPTION_KEY=$(openssl rand -hex 32)" >> docker/.env

      - name: Start services with Docker Compose
        run: |
          cd docker
          docker compose up -d

      - name: Wait for services to be healthy
        run: |
          cd docker
          echo "Waiting for services to be healthy..."
          for i in {1..30}; do
            if docker compose ps | grep -q "healthy"; then
              echo "Services are healthy!"
              break
            fi
            echo "Services not healthy yet, retrying..."
            sleep 2
          done

      - name: Check logs for errors
        run: |
          cd docker
          if docker compose logs --no-color --since 1m | grep -i "error"; then
            echo "Errors found in logs."
            exit 1
          else
            echo "No errors found in logs."
          fi

      - name: Test API health endpoint
        run: |
          cd docker
          echo "Testing API health endpoint..."
          for i in {1..30}; do
            if curl -s http://localhost:3000/api/health | grep -q "ok"; then
              echo "API health is ok!"
              break
            fi
            echo "API not ready, retrying..."
            sleep 2
          done

      - name: Test login endpoint
        run: |
          cd docker
          echo "Testing login endpoint..."
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" -X POST http://localhost:3000/api/auth/login \
            -H "Content-Type: application/json" \
            -d '{"email":"test@gentrace.ai","password":"TestPassword123"}')
          if [ "$STATUS" -ne 200 ]; then
            echo "Login test failed with status $STATUS"
            exit 1
          fi
          echo "Login test passed!"

