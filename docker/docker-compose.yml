version: "3.8"

services:
  app:
    image: quay.io/gentrace/core:production
    entrypoint: ["/entrypoint.sh"]
    command: ["app"]
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://gentrace:gentrace123@postgres:5432/gentrace
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_PROTOCOL=http
      - CLICKHOUSE_DATABASE=gentrace
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=gentrace123
      - KAFKA_BROKER=kafka
      - KAFKA_PORT=9092
      - STORAGE_ACCESS_KEY_ID=minioadmin
      - STORAGE_SECRET_ACCESS_KEY=minioadmin
      - STORAGE_ENDPOINT=http://minio:9000
      - STORAGE_BUCKET=gentrace-public
      - STORAGE_REGION=us-central1
      - STORAGE_FORCE_PATH_STYLE=true
      - PUBLIC_HOSTNAME=localhost
      - PORT=3000
      - NEXT_PUBLIC_SELF_HOSTED=true
      - NEXT_PUBLIC_SELF_HOSTED_TLS=false
      - NEXT_OTEL_VERBOSE=1
      - JWT_SECRET=${JWT_SECRET}
      - PRISMA_FIELD_ENCRYPTION_KEY=${PRISMA_FIELD_ENCRYPTION_KEY}
    depends_on:
      migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
      minio:
        condition: service_started

  migrate:
    image: quay.io/gentrace/core:production
    entrypoint: ["/bin/sh", "-c"]
    command: ["npm run self-hosted:migrate-and-seed"]
    environment:
      - DATABASE_URL=postgresql://gentrace:gentrace123@postgres:5432/gentrace
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_PROTOCOL=http
      - CLICKHOUSE_DATABASE=gentrace
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=gentrace123
      - NODE_ENV=development
      - ENVIRONMENT=development
      - JWT_SECRET=${JWT_SECRET}
      - PRISMA_FIELD_ENCRYPTION_KEY=${PRISMA_FIELD_ENCRYPTION_KEY}
      # Change these values for production use
      - ADMIN_EMAIL=admin@yourdomain.com
      - ADMIN_PASSWORD=your-secure-admin-password
      - ADMIN_NAME=Admin User
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy

  websocket-server:
    image: quay.io/gentrace/core:production
    entrypoint: ["/entrypoint.sh"]
    command: ["websocket"]
    ports:
      - "3002:3002"
    environment:
      - DATABASE_URL=postgresql://gentrace:gentrace123@postgres:5432/gentrace
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_PROTOCOL=http
      - CLICKHOUSE_DATABASE=gentrace
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=gentrace123
      - KAFKA_BROKER=kafka
      - KAFKA_PORT=9092
      - PUBLIC_HOSTNAME=localhost
      - PORT=3002
      - NEXT_PUBLIC_SELF_HOSTED=true
      - NEXT_PUBLIC_SELF_HOSTED_TLS=false
      - NEXT_OTEL_VERBOSE=1
      - JWT_SECRET=${JWT_SECRET}
      - PRISMA_FIELD_ENCRYPTION_KEY=${PRISMA_FIELD_ENCRYPTION_KEY}
    depends_on:
      migrate:
        condition: service_completed_successfully
      kafka:
        condition: service_healthy

  taskrunner:
    image: quay.io/gentrace/core:production
    entrypoint: ["/entrypoint.sh"]
    command: ["taskrunner"]
    environment:
      - DATABASE_URL=postgresql://gentrace:gentrace123@postgres:5432/gentrace
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_PROTOCOL=http
      - CLICKHOUSE_DATABASE=gentrace
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=gentrace123
      - KAFKA_BROKER=kafka
      - KAFKA_PORT=9092
      - PUBLIC_HOSTNAME=localhost
      - NEXT_PUBLIC_SELF_HOSTED=true
      - NEXT_PUBLIC_SELF_HOSTED_TLS=false
      - NEXT_OTEL_VERBOSE=1
      - JWT_SECRET=${JWT_SECRET}
      - PRISMA_FIELD_ENCRYPTION_KEY=${PRISMA_FIELD_ENCRYPTION_KEY}
      - STORAGE_ACCESS_KEY_ID=minioadmin
      - STORAGE_SECRET_ACCESS_KEY=minioadmin
      - STORAGE_ENDPOINT=http://minio:9000
      - STORAGE_BUCKET=gentrace-public
      - STORAGE_REGION=us-central1
      - STORAGE_FORCE_PATH_STYLE=true
    depends_on:
      migrate:
        condition: service_completed_successfully
      kafka:
        condition: service_healthy

  taskscheduler:
    image: quay.io/gentrace/core:production
    entrypoint: ["/entrypoint.sh"]
    command: ["taskscheduler"]
    environment:
      - DATABASE_URL=postgresql://gentrace:gentrace123@postgres:5432/gentrace
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_PROTOCOL=http
      - CLICKHOUSE_DATABASE=gentrace
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=gentrace123
      - KAFKA_BROKER=kafka
      - KAFKA_PORT=9092
      - PUBLIC_HOSTNAME=localhost
      - NEXT_PUBLIC_SELF_HOSTED=true
      - NEXT_PUBLIC_SELF_HOSTED_TLS=false
      - JWT_SECRET=${JWT_SECRET}
      - PRISMA_FIELD_ENCRYPTION_KEY=${PRISMA_FIELD_ENCRYPTION_KEY}
    depends_on:
      migrate:
        condition: service_completed_successfully
      kafka:
        condition: service_healthy

  postgres:
    image: postgres:15.3
    environment:
      # Change these values for production use
      - POSTGRES_USER=gentrace
      - POSTGRES_PASSWORD=gentrace123
      - POSTGRES_DB=gentrace
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gentrace"]
      interval: 5s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LISTENERS: "PLAINTEXT://:9092,PLAINTEXT_HOST://:29092,CONTROLLER://:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CLUSTER_ID: "5Yr1SIgYQz-b-dgRabWx4g"
    healthcheck:
      test:
        ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:29092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - kafka_data:/var/lib/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME=clickhouse
      - KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS=http://kafka-connect:8083
    depends_on:
      - kafka

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.4.4
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
    depends_on:
      - kafka

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      # Change these values for production use
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    ports:
      - "8123:8123" # http port
      - "9100:9000" # native port
    environment:
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=gentrace123
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8123/ping",
        ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
  kafka_data:
  minio_data:
  clickhouse_data:
