apiVersion: apps/v1
kind: StatefulSet
metadata:
    name: kafka-connect
    labels:
        app: kafka-connect
spec:
    serviceName: kafka-connect
    replicas: 1
    selector:
        matchLabels:
            app: kafka-connect
    template:
        metadata:
            labels:
                app: kafka-connect
            {{- if .Values.istio.enabled }}
            annotations:
                sidecar.istio.io/inject: {{ .Values.istio.injection | quote }}
                {{- with .Values.istio.annotations }}
                {{- toYaml . | nindent 16 }}
                {{- end }}
            {{- end }}
        spec:
            initContainers:
                - name: wait-for-kafka
                  image: "{{ .Values.kafka.image }}:{{ .Values.kafka.version }}"
                  securityContext:
                    runAsUser: 0
                    runAsGroup: 0
                  command:
                    - /bin/sh
                    - -c
                    - |
                      until kafka-topics --bootstrap-server kafka:{{ .Values.kafka.port }} --list > /dev/null 2>&1; do
                        echo "Waiting for Kafka broker to be ready..."
                        sleep 5
                      done
                - name: wait-for-clickhouse
                  image: "{{ .Values.clickhouse.image }}:{{ .Values.clickhouse.version }}"
                  securityContext:
                    runAsUser: 0
                    runAsGroup: 0
                  command:
                    - /bin/sh
                    - -c
                    - |
                      until clickhouse client --host clickhouse --port {{ .Values.clickhouse.tcpPort }} --user=$CLICKHOUSE_USER --password=$CLICKHOUSE_PASSWORD --query "SELECT 1" > /dev/null 2>&1; do
                        echo "Waiting for ClickHouse to be ready..."
                        sleep 5
                      done
                  env:
                    - name: CLICKHOUSE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ .Values.secrets.clickhouse.name }}
                          key: CLICKHOUSE_PASSWORD
                    - name: CLICKHOUSE_USER
                      valueFrom:
                        secretKeyRef:
                          name: {{ .Values.secrets.clickhouse.name }}
                          key: CLICKHOUSE_USER
                - name: download-connector
                  image: curlimages/curl:latest
                  command:
                    - sh
                    - -c
                    - |
                      curl -L https://github.com/ClickHouse/clickhouse-kafka-connect/releases/download/v1.0.17/clickhouse-kafka-connect-v1.0.17.zip -o /plugins/clickhouse-connector.zip && \
                      cd /plugins && unzip clickhouse-connector.zip && \
                      mv clickhouse-kafka-connect-v1.0.17/* . && \
                      rm -rf clickhouse-connector.zip clickhouse-kafka-connect-v1.0.17
                  volumeMounts:
                    - name: connect-plugins
                      mountPath: /plugins
                - name: process-config
                  image: bhgedigital/envsubst
                  command:
                    - sh
                    - -c
                    - cat /config-templates/clickhouse-raw.properties | envsubst > /processed-config/clickhouse.properties
                  env:
                    - name: CLICKHOUSE_USER
                      valueFrom:
                        secretKeyRef:
                          name: {{ .Values.secrets.clickhouse.name }}
                          key: CLICKHOUSE_USER
                    - name: CLICKHOUSE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ .Values.secrets.clickhouse.name }}
                          key: CLICKHOUSE_PASSWORD
                  volumeMounts:
                    - name: config
                      mountPath: /config-templates
                    - name: processed-config
                      mountPath: /processed-config
            containers:
                - name: kafka-connect
                  image: "{{ .Values.kafka.connect.image }}:{{ .Values.kafka.connect.version }}"
                  securityContext:
                    runAsUser: 0
                    runAsGroup: 0
                  command: ["/bin/connect-standalone", "/config/standalone.properties", "/processed-config/clickhouse.properties"]
                  ports:
                      - name: connect-api
                        containerPort: 8083
                  env:
                      - name: KAFKA_BOOTSTRAP_SERVERS
                        value: "kafka:{{ .Values.kafka.port }}"
                      - name: CONNECT_REST_PORT
                        value: "{{ .Values.kafka.connect.port }}"
                      - name: CONNECT_GROUP_ID
                        value: "{{ .Values.kafka.connect.config.groupId }}"
                      - name: CONNECT_CONFIG_STORAGE_TOPIC
                        value: "{{ .Values.kafka.connect.config.configStorageTopic }}"
                      - name: CONNECT_OFFSET_STORAGE_TOPIC
                        value: "{{ .Values.kafka.connect.config.offsetStorageTopic }}"
                      - name: CONNECT_STATUS_STORAGE_TOPIC
                        value: "{{ .Values.kafka.connect.config.statusStorageTopic }}"
                      - name: CONNECT_KEY_CONVERTER
                        value: "{{ .Values.kafka.connect.config.keyConverter }}"
                      - name: CONNECT_VALUE_CONVERTER
                        value: "{{ .Values.kafka.connect.config.valueConverter }}"
                  volumeMounts:
                      - name: config
                        mountPath: /config
                      - name: processed-config
                        mountPath: /processed-config
                      - name: connect-plugins
                        mountPath: /usr/share/java/kafka-connect-plugins
                  readinessProbe:
                      httpGet:
                          path: /
                          port: 8083
                      initialDelaySeconds: 10
                      periodSeconds: 10
                  livenessProbe:
                      httpGet:
                          path: /
                          port: 8083
                      initialDelaySeconds: 30
                      periodSeconds: 10
                  resources:
                      {{- toYaml .Values.kafka.connect.resources | nindent 22 }}
            volumes:
                - name: config
                  configMap:
                    name: kafka-connect-config
                - name: processed-config
                  emptyDir: {}
                - name: connect-plugins
                  emptyDir: {}
